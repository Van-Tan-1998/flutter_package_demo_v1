class KitInputDecoration extends InputDecoration {
  InputBorder? focusedBorder;
  InputBorder? border;

  KitInputDecoration({
    Widget? icon,
    Color? iconColor,
    Widget? label,
    String? labelText,
    TextStyle? labelStyle,
    TextStyle? floatingLabelStyle,
    String? helperText,
    TextStyle? helperStyle,
    int? helperMaxLines,
    String? hintText,
    TextStyle? hintStyle,
    TextDirection? hintTextDirection,
    int? hintMaxLines,
    String? errorText,
    TextStyle? errorStyle,
    int? errorMaxLines,
    FloatingLabelBehavior? floatingLabelBehavior,
    FloatingLabelAlignment? floatingLabelAlignment,
    bool isCollapsed = false,
    bool? isDense,
    EdgeInsetsGeometry? contentPadding,
    Widget? prefixIcon,
    BoxConstraints? prefixIconConstraints,
    Widget? prefix,
    String? prefixText,
    TextStyle? prefixStyle,
    Color? prefixIconColor,
    Widget? suffixIcon,
    Widget? suffix,
    String? suffixText,
    TextStyle? suffixStyle,
    Color? suffixIconColor,
    BoxConstraints? suffixIconConstraints,
    Widget? counter,
    String? counterText,
    TextStyle? counterStyle,
    bool? filled,
    Color? fillColor,
    Color? focusColor,
    Color? hoverColor,
    InputBorder? errorBorder,
    InputBorder? focusedBorder,
    InputBorder? focusedErrorBorder,
    InputBorder? disabledBorder,
    InputBorder? enabledBorder,
    InputBorder? border,
    bool enabled = true,
    String? semanticCounterText,
    bool? alignLabelWithHint,
    BoxConstraints? constraints,
  }) : super(
    icon: icon,
    iconColor: iconColor,
    label: label,
    labelText: labelText,
    labelStyle: labelStyle,
    floatingLabelStyle: floatingLabelStyle,
    helperText: helperText,
    helperStyle: helperStyle,
    helperMaxLines: helperMaxLines,
    hintText: hintText,
    hintStyle: hintStyle,
    hintTextDirection: hintTextDirection,
    hintMaxLines: hintMaxLines,
    errorText: errorText,
    errorStyle: errorStyle,
    errorMaxLines: errorMaxLines,
    floatingLabelBehavior: floatingLabelBehavior,
    floatingLabelAlignment: floatingLabelAlignment,
    isCollapsed: isCollapsed,
    isDense: isDense,
    contentPadding: contentPadding,
    prefixIcon: prefixIcon,
    prefix: prefix,
    prefixText: prefixText,
    prefixStyle: prefixStyle,
    prefixIconColor: prefixIconColor,
    prefixIconConstraints: prefixIconConstraints,
    suffixIcon: suffixIcon,
    suffix: suffix,
    suffixText: suffixText,
    suffixStyle: suffixStyle,
    suffixIconColor: suffixIconColor,
    suffixIconConstraints: suffixIconConstraints,
    counter: counter,
    counterText: counterText,
    counterStyle: counterStyle,
    filled: filled,
    fillColor: fillColor,
    focusColor: focusColor,
    hoverColor: hoverColor,
    errorBorder: errorBorder,
    focusedBorder: focusedBorder,
    focusedErrorBorder: focusedErrorBorder,
    disabledBorder: disabledBorder,
    enabledBorder: enabledBorder,
    border: border,
    enabled: enabled,
    semanticCounterText: semanticCounterText,
    alignLabelWithHint: alignLabelWithHint,
    constraints: constraints,
  );

  KitInputDecoration.defaultInputDecoration(
      {Widget? icon,
        Color? iconColor,
        Widget? label,
        String? labelText,
        TextStyle? labelStyle,
        TextStyle? floatingLabelStyle,
        String? helperText,
        TextStyle? helperStyle,
        int? helperMaxLines,
        String? hintText,
        TextStyle? hintStyle,
        TextDirection? hintTextDirection,
        int? hintMaxLines,
        String? errorText,
        TextStyle? errorStyle,
        int? errorMaxLines,
        FloatingLabelBehavior? floatingLabelBehavior,
        FloatingLabelAlignment? floatingLabelAlignment,
        bool isCollapsed = false,
        bool? isDense,
        EdgeInsetsGeometry? contentPadding,
        Widget? prefixIcon,
        BoxConstraints? prefixIconConstraints,
        Widget? prefix,
        String? prefixText,
        TextStyle? prefixStyle,
        Color? prefixIconColor,
        Widget? suffixIcon,
        Widget? suffix,
        String? suffixText,
        TextStyle? suffixStyle,
        Color? suffixIconColor,
        BoxConstraints? suffixIconConstraints,
        Widget? counter,
        String? counterText,
        TextStyle? counterStyle,
        bool? filled,
        Color? fillColor,
        Color? focusColor,
        Color? hoverColor,
        InputBorder? errorBorder,
        InputBorder? focusedBorder,
        InputBorder? focusedErrorBorder,
        InputBorder? disabledBorder,
        InputBorder? enabledBorder,
        InputBorder? border,
        bool enabled = true,
        String? semanticCounterText,
        bool? alignLabelWithHint,
        BoxConstraints? constraints,

        // adding
        double kitRadius = 10})
      : border = OutlineInputBorder(
    borderRadius: BorderRadius.circular(kitRadius),
    borderSide: const BorderSide(
      color: Colors.black,
      width: 1.0,
    ),
  ),
        focusedBorder = OutlineInputBorder(
          borderRadius: BorderRadius.circular(kitRadius),
          borderSide: const BorderSide(
            color: Colors.green,
            width: 2.0,
          ),
        ),
        super(
        icon: icon,
        iconColor: iconColor,
        label: label,
        labelText: labelText,
        labelStyle: labelStyle,
        floatingLabelStyle: floatingLabelStyle,
        helperText: helperText,
        helperStyle: helperStyle,
        helperMaxLines: helperMaxLines,
        hintText: hintText,
        hintStyle: hintStyle,
        hintTextDirection: hintTextDirection,
        hintMaxLines: hintMaxLines,
        errorText: errorText,
        errorStyle: errorStyle,
        errorMaxLines: errorMaxLines,
        floatingLabelBehavior: floatingLabelBehavior,
        floatingLabelAlignment: floatingLabelAlignment,
        isCollapsed: isCollapsed,
        isDense: isDense,
        contentPadding: contentPadding,
        prefixIcon: prefixIcon,
        prefix: prefix,
        prefixText: prefixText,
        prefixStyle: prefixStyle,
        prefixIconColor: prefixIconColor,
        prefixIconConstraints: prefixIconConstraints,
        suffixIcon: suffixIcon,
        suffix: suffix,
        suffixText: suffixText,
        suffixStyle: suffixStyle,
        suffixIconColor: suffixIconColor,
        suffixIconConstraints: suffixIconConstraints,
        counter: counter,
        counterText: counterText,
        counterStyle: counterStyle,
        filled: filled,
        fillColor: fillColor,
        focusColor: focusColor,
        hoverColor: hoverColor,
        errorBorder: errorBorder,
        focusedBorder: focusedBorder,
        focusedErrorBorder: focusedErrorBorder,
        disabledBorder: disabledBorder,
        enabledBorder: enabledBorder,
        border: border,
        enabled: enabled,
        semanticCounterText: semanticCounterText,
        alignLabelWithHint: alignLabelWithHint,
        constraints: constraints,
      );
}
